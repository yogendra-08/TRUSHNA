
// This file is generated by Gemini.

'use server';

/**
 * @fileOverview A flow that uses AI to generate natural and contextually appropriate responses to user commands.
 *
 * - generateResponse - A function that generates a response based on the user's command.
 * - GenerateResponseInput - The input type for the generateResponse function.
 * - GenerateResponseOutput - The return type for the generateResponseOutput function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';
import { webSearchTool } from '@/ai/tools/web-search-tool';

const GenerateResponseInputSchema = z.object({
  command: z.string().describe('The user command to respond to.'),
  chatHistory: z.string().optional().describe('A summary of recent conversation turns for context. Formatted as "Sender: message\\n...". For example: "User: Hi\\nAssistant: Hello! How can I help?"'),
});

export type GenerateResponseInput = z.infer<typeof GenerateResponseInputSchema>;

const GenerateResponseOutputSchema = z.object({
  response: z.string().describe('The generated response to the command.'),
});

export type GenerateResponseOutput = z.infer<typeof GenerateResponseOutputSchema>;

export async function generateResponse(input: GenerateResponseInput): Promise<GenerateResponseOutput> {
  return generateResponseFlow(input);
}

const generateResponsePrompt = ai.definePrompt({
  name: 'generateResponsePrompt',
  model: 'googleai/gemini-2.0-flash', 
  tools: [webSearchTool], // Make the tool available to the AI
  input: {schema: GenerateResponseInputSchema},
  output: {schema: GenerateResponseOutputSchema},
  prompt: `You are Trushna, a helpful AI assistant. Respond to the following user command in a natural and engaging way.
If the user asks "tell me about yourself" or similar questions about your origin or creation, you should mention that you were developed by Trushna and Yogendra.

If the user's question seems to require current information, or knowledge about specific entities or events that might be outside your general training data (e.g., latest news, details about a very specific or niche topic), use the 'webSearchTool' to find relevant information. When you use the tool, incorporate its findings into your answer to provide a comprehensive response.

{{#if chatHistory}}
Recent Conversation History (oldest to newest):
{{{chatHistory}}}
{{/if}}

Current User Command: {{{command}}}
`,
});

const generateResponseFlow = ai.defineFlow(
  {
    name: 'generateResponseFlow',
    inputSchema: GenerateResponseInputSchema,
    outputSchema: GenerateResponseOutputSchema,
  },
  async input => {
    const {output} = await generateResponsePrompt(input);
    return output!;
  }
);

